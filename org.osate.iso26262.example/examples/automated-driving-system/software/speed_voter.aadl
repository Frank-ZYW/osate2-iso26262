package aadlbook::software::speed_voter

public

with aadlbook::icd; 
with sei;

-------------------
--  Speed Voter  --
-------------------

process speed_voter
features
	wheel_sensor : in data port aadlbook::icd::speed;
	laser_sensor : in data port aadlbook::icd::speed;
	speed        : out data port aadlbook::icd::speed;
flows
	f0 : flow path wheel_sensor -> speed;
	f1 : flow path laser_sensor -> speed;
annex EMV2 {**
	use types 		ErrorLibrary;
	use behavior  	lib::FailStop;

	error propagations
		wheel_sensor : in propagation {ItemOmission,OutOfRange};
		laser_sensor : in propagation {ItemOmission,OutOfRange};
		speed : out propagation {ItemOmission,OutOfRange};
		processor : in propagation {ServiceError};
	flows
		ef0 : error path wheel_sensor{ItemOmission} -> speed{ItemOmission};
		ef1 : error path wheel_sensor{OutOfRange} -> speed{OutOfRange};
		ef2 : error path laser_sensor{ItemOmission} -> speed{ItemOmission};
		ef3 : error path laser_sensor{OutOfRange} -> speed{OutOfRange};
		ef4 : error path processor{ServiceError} -> speed{ItemOmission};
	end propagations;

	component error behavior
	transitions
		t0 : Operational -[processor{ServiceError}]-> FailStop;
		t1 : FailStop -[processor{NoError}]-> Operational;
	propagations
	   	p1 : FailStop -[]-> speed{ItemOmission};
	end component;
	properties
		ISO26262::hazards =>([ HazardName =>"Unable to handle and output the correct speed";
				  SafetyDescription=>"Eliminates potential bad values, and outputs a consistent speed value";]) applies to  FailStop;
		ISO26262::hazards =>([ HazardName =>"Loss of speed from speed voter";
				  SafetyDescription=>"Output the correct speed to the controller";]) applies to  speed.ItemOmission; 
		ISO26262::hazards =>([ HazardName =>"Invalid speed from speed voter";
				  SafetyDescription=>"Output the correct speed to the controller";]) applies to  speed.OutOfRange; 		
		ISO26262::FMEDASafetyProperties => [FailureRate => 0.01; SafetyRelated => false;] applies to FmedaState;	
		ISO26262::FailureMode => [	ModeName => "Unable to handle and output the correct speed";
				  	  			 	Distribution => 100.0;
				  	  				Violate_SP_Satety => false;
--				  	  				SPF_SM => "SM2";
--					  				SPF_DC => 95.0;
				 	  				Violate_MP_Satety => false;
				  				] applies to FailStop;								 	
--		ISO26262::FailureMode => [	ModeName => "Invalid speed from speed voter";
--				  	  			 	Distribution => 30.0;
--				  	  				Violate_SP_Satety => false;
----				  	  				SPF_SM => "SM2";
----					  				SPF_DC => 95.0;
--				 	  				Violate_MP_Satety => false;
----				 	  				MPF_SM => "SM4";
----					  				MPF_DC => 80.0;
--				  				] applies to e1;		
--		ISO26262::FailureMode => [	ModeName => "Loss of speed from speed voter";
--				  	  			 	Distribution => 30.0;
--				  	  				Violate_SP_Satety => false;
----				  	  				SPF_SM => "SM2";
----					  				SPF_DC => 95.0;
--				 	  				Violate_MP_Satety => false;
----				 	  				MPF_SM => "SM4";
----					  				MPF_DC => 80.0;
--				  				]applies to e2;		   
		EMV2::OccurrenceDistribution => [ ProbabilityValue => 0.5e-5 ; Distribution => Poisson;] applies to Failure;
		EMV2::OccurrenceDistribution => [ ProbabilityValue => 0.5e-5 ; Distribution => Poisson;] applies to processor.ServiceError;
**};
end speed_voter;

process implementation speed_voter.i
subcomponents
	thr : thread speed_voter_thr.i;
connections
	c0 : port wheel_sensor -> thr.wheel_sensor;
	c1 : port laser_sensor -> thr.laser_sensor;
	c2 : port thr.speed -> speed;
flows
	f0 : flow path wheel_sensor -> c0 -> thr.f0 -> c2 -> speed;
	f1 : flow path laser_sensor -> c1 -> thr.f1 -> c2 -> speed;
end speed_voter.i;

thread speed_voter_thr
features
	wheel_sensor : in data port aadlbook::icd::speed;
	laser_sensor : in data port aadlbook::icd::speed;
	speed        : out data port aadlbook::icd::speed;
flows
	f0 : flow path wheel_sensor -> speed;
	f1 : flow path laser_sensor -> speed;
properties
	Dispatch_Protocol => Periodic;
	Period            => 8ms;
	sei::mipsbudget   => 8.0 MIPS; 
end speed_voter_thr;

thread implementation speed_voter_thr.i
end speed_voter_thr.i;

end aadlbook::software::speed_voter;
